%Sean McGuire
%Gaussian Mixture Model
numberOfDataSets = 2;
%2 data sets with x and y
set1 = mvnrnd([1 1],[1,1],500);
set2 = mvnrnd([7 7],[1,1],500);
TotalData = [set1; set2];
delta = 1;
PreviousValue = 0;

d = length(set1);
mean1x = 0.5; 
mean2x = 0.3;
mean1y = 6.2;
mean2y = 6.3;

hold on;
title('Training Data')
plot(set1(:,1),set1(:,2), 'b.')
plot(set2(:,1),set2(:,2), 'r+')
hold off;
counter = 0;
while 1
    sum1x = 0;
    sum2x = 0;
    sum1y = 0;
    sum2y = 0;
    for i = 1:1000
       sum1x = sum1x + (TotalData(i,1)-mean1x)^2;
       sum2x = sum2x + (TotalData(i,1)-mean2x)^2;
       sum1y = sum1y + (TotalData(i,2) -mean1y)^2;
       sum2y = sum2y + (TotalData(i,2) -mean2y)^2;
    end
    covariance1x = sum1x/length(TotalData);
    covariance2x = sum2x/length(TotalData);
    covariance1y = sum1y/length(TotalData);
    covariance2y = sum2y/length(TotalData);
    likely1 = 0;
    likely2 = 0;
    post1 = 0;
    post2 = 0;
    Class1Meanx = 0;
    Class2Meanx = 0;
    Class1Meany = 0;
    Class2Meany = 0;
    TotLikelyX1 = 0;
    TotLikelyY1 = 0;
    TotLikelyX2 = 0;
    TotLikelyY2 = 0;
    STDevX1 = 0;
    STDevY1 = 0;
    STDevX2 = 0;
    STDevY2 = 0;
    for i = 1:1000
       likely1x = normpdf(TotalData(i,1),mean1x,covariance1x);
       likely2x = normpdf(TotalData(i,1),mean2x,covariance2x);
       likely1y = normpdf(TotalData(i,2),mean1y,covariance1y);
       likely2y = normpdf(TotalData(i,2),mean2y,covariance2y);

       Class1Meanx = Class1Meanx + likely1x*TotalData(i,1);
       TotLikelyX1 = TotLikelyX1 + likely1x;
       Class1Meany = Class1Meany + likely1y*TotalData(i,2);
       TotLikelyY1 = TotLikelyY1 + likely1y;
       STDevX1 = STDevX1 + likely1x*((TotalData(i,1)-mean1x)^2);
       STDevY1 = STDevY1 + likely1y*((TotalData(i,2)-mean1y)^2);
       Class2Meanx = Class2Meanx + likely2x*TotalData(i,1);
       TotLikelyX2 = TotLikelyX2 + likely2x;
       Class2Meany = Class2Meany + likely2y*TotalData(i,2);
       TotLikelyY2 = TotLikelyY2 + likely2y;
       STDevX2 = STDevX2 + likely2x*((TotalData(i,1)-mean2x)^2);
       STDevY2 = STDevY2 + likely2y*((TotalData(i,2)-mean2y)^2);
       tmpMean2x = Class2Meanx / TotLikelyX2;
       tmpMean1x = Class1Meanx / TotLikelyX1;
       tmpMean2y = Class2Meany / TotLikelyY2;
       tmpMean1y = Class1Meany / TotLikelyY1;
       fprintf('Class 1 X: %d Y: %d STDx: %d STDy: %d\n', tmpMean2x, tmpMean1x,tmpMean2y,tmpMean1y);
       likely1 = likely1x *likely1y;
       likely2 = likely2x * likely2y;
       if i == 1
          Data1 = [];
          Data2 = [];
       end
       if(likely1 > likely2)
            post1 = post1 + 1;
            Data1 = [Data1;TotalData(i,:)]; 
       end
       if(likely2 >= likely1)
            post2 = post2 + 1;
            Data2 = [Data2;TotalData(i,:)];
       end
    end
    counter = counter + 1;
    covariance1x = STDevX1/TotLikelyX1;  
    covariance1y = STDevY1/TotLikelyY1;
    covariance2x = STDevX2/TotLikelyX2;  
    covariance2y = STDevY2/TotLikelyY2;
    mean1x = Class1Meanx/TotLikelyX1;
    mean1y = Class1Meany/TotLikelyY1;
    mean2x = Class2Meanx/TotLikelyX2;
    mean2y = Class2Meany/TotLikelyY2;
    fprintf('Class 1 X: %d Y: %d STDx: %d STDy: %d\n', mean1x, mean1y,covariance1x,covariance1y);
    fprintf('Class 2 X: %d Y: %d STDx: %d STDy: %d\n', mean2x, mean2y,covariance2x,covariance2y);
    delta = mean1x - PreviousValue;
    PreviousValue = mean1x;
end